/*
 * Copyright 2012-2017 Tobi29
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "kotlin-platform-jvm"
apply plugin: "maven"
apply plugin: "org.jetbrains.dokka"
apply plugin: "eclipse"

kotlin {
    experimental {
        coroutines "enable"
    }
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task printClasspath {
    doLast {
        println(sourceSets.getByName("main").runtimeClasspath.asPath)
    }
}

ext.implementCommon = { Project project ->
    dependencies.implement project
    dependencies.compileOnly project
    dependencies.testCompileOnly project
    tasks.sourcesJar.from project.sourceSets.main.allSource
}

eclipse.project {
    natures "org.jetbrains.kotlin.core.kotlinNature"
}
